<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>business-services</artifactId>
        <groupId>com.krukovska.microservices</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>one</artifactId>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <dep.ver.metrics>3.1.2</dep.ver.metrics>
        <dep.ver.servlet>3.1.0</dep.ver.servlet>
        <netflix.servo.ver>0.12.17</netflix.servo.ver>
        <micrometer.ver>1.7.1</micrometer.ver>
        <fasterxml.jackson.version>2.9.1</fasterxml.jackson.version>
        <spring-boot-starter-web.version>2.0.7.RELEASE</spring-boot-starter-web.version>
        <assertj-core.version>3.11.1</assertj-core.version>
        <metrics-aspectj.version>1.1.0</metrics-aspectj.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-core</artifactId>
            <version>${dep.ver.metrics}</version>
        </dependency>
        <dependency>
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-healthchecks</artifactId>
            <version>${dep.ver.metrics}</version>
        </dependency>
        <dependency>
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-servlets</artifactId>
            <version>${dep.ver.metrics}</version>
        </dependency>
        <dependency>
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-servlet</artifactId>
            <version>${dep.ver.metrics}</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${dep.ver.servlet}</version>
        </dependency>
        <dependency>
            <groupId>com.netflix.servo</groupId>
            <artifactId>servo-core</artifactId>
            <version>${netflix.servo.ver}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.netflix.servo</groupId>
            <artifactId>servo-atlas</artifactId>
            <version>${netflix.servo.ver}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-atlas</artifactId>
            <version>${micrometer.ver}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${spring-boot-starter-web.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.12.4</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-smile</artifactId>
            <version>2.12.4</version>
        </dependency>
        <dependency>
            <groupId>io.astefanutti.metrics.aspectj</groupId>
            <artifactId>metrics-aspectj-deps</artifactId>
            <version>${metrics-aspectj.version}</version>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj-core.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.netflix.spectator</groupId>
            <artifactId>spectator-api</artifactId>
            <version>0.132.0</version>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>docker</id>
            <properties>
                <PORT_TO_EXPOSE>8080</PORT_TO_EXPOSE>
                <JAR_NAME_TO_RUN>${project.build.finalName}.${project.packaging}</JAR_NAME_TO_RUN>
                <LABEL_DESCRIPTION>${project.name}</LABEL_DESCRIPTION>
                <LABEL_GROUP>${project.parent.groupId}</LABEL_GROUP>
                <LABEL_ID>${project.artifactId}</LABEL_ID>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>add-source</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-resource</goal>
                                </goals>
                                <configuration>
                                    <resources>
                                        <resource>
                                            <directory>${base-path}/docker/springboot-app</directory>
                                            <targetPath>${project.build.directory}/docker</targetPath>
                                            <filtering>true</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copyFinalJar</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>${project.artifactId}</artifactId>
                                            <version>${project.version}</version>
                                            <type>jar</type>
                                            <outputDirectory>${project.build.directory}/docker</outputDirectory>
                                            <destFileName>${JAR_NAME_TO_RUN}</destFileName>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>imageBuild</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${docker-maven-plugin.version}</version>
                        <configuration>
                            <!-- <imageName>${master_host}:5000/${docker_image_prefix}/${project.artifactId}</imageName>
                              <dockerDirectory>${project.build.directory}/docker</dockerDirectory> -->
                            <imageName>${docker_image_prefix}/${project.artifactId}</imageName>
                            <imageTags>
                                <imageTag>${project.version}</imageTag>
                            </imageTags>
                            <baseImage>java</baseImage>
                            <entryPoint>["java", "-jar", "/${JAR_NAME_TO_RUN}"]</entryPoint>
                            <resources>
                                <resource>
                                    <targetPath>/</targetPath>
                                    <directory>${project.build.directory}/docker</directory>
                                    <include>${JAR_NAME_TO_RUN}</include>
                                </resource>
                            </resources>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>